<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>dmca.gripe:永久托管你的小文件</title>
      <link href="/posts/20976.html"/>
      <url>/posts/20976.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>此篇是我严格意义上的第一篇博文。选择这个主题也是因为在后续优化博客的过程中碰到了相应的问题。故借此机会写下来分享分享。</p><p>因为自己想要在博客中增添音乐和视频板块，在搭建博客的时候参考别人的博客，发现大部分人都是去通过找寻免费的音频网站，获取外链的方式将音乐地址。但这样找寻地址既麻烦，又不能保证音频地址的长期有效性。因为大多数免费音频网站的音乐地址并不是永久固定的，一旦某日链接失效就不能用了。</p><p>我在搭建的时候，为了图方便，把视频和音乐事先下载好放在根目录下，然后将所有音乐和视频的url全部设置成本地地址。但在后期优化的过程中，我发现这样子做虽然确保了链接的永久有效性，但却大大影响了访问速率（一个视频的大小就相当于我其他文件的总和了）。因此，我想找一个既简单免费（毕竟为了这个需求去阿里云买空间实在不值得）、又能永久托管储存我的一些小文件的工具。而 dmca.gripe 完美符合我的需求。</p><p>dmca.gripe下，每个文件的最大上传大小是 5120MB，有账户机制，创建一个账户后便有一个属于你自己的云空间。经测试，上传下载速度都不成问题。任何文件都可以上传。因为博客中的图片，音乐，视频都需要外链，所以我以以上三种文件类型进行测试。</p><p><a href="[https://dmca.gripe](https://dmca.gripe/)">点击进入dmca.gripe</a></p><hr><h3 id="图片外链测试"><a href="#图片外链测试" class="headerlink" title="图片外链测试"></a>图片外链测试</h3><p><img src="D:/Software/Typora/images/yz94A9s1yL956wBr.jpg" alt="img"></p><pre><code>https://share.dmca.gripe/yz94A9s1yL956wBr.jpg</code></pre><h3 id="视频外链测试"><a href="#视频外链测试" class="headerlink" title="视频外链测试"></a>视频外链测试</h3><video src="https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4"><pre><code>https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4</code></pre><h3 id="音乐外链测试"><a href="#音乐外链测试" class="headerlink" title="音乐外链测试"></a>音乐外链测试</h3><audio controls="controls">  <source src="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" type="audio/ogg"><embed height="100" width="100" src="/i/song.mp3"></audio><pre><code>https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3</code></pre><h3 id="文件下载测试"><a href="#文件下载测试" class="headerlink" title="文件下载测试"></a>文件下载测试</h3><h5 id="花海-mp3"><a href="#花海-mp3" class="headerlink" title="花海.mp3"></a><a href="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" target="_blank" rel="noopener">花海.mp3</a></h5></video><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gripe </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start-smile-smile-smile-smile"><a href="#Quick-Start-smile-smile-smile-smile" class="headerlink" title="Quick Start :smile: :smile::smile: :smile:"></a>Quick Start :smile: :smile::smile: :smile:</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span class="token operator">&lt;</span>div class<span class="token operator">=</span><span class="token string">"statis"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>span class<span class="token operator">=</span><span class="token string">"count"</span><span class="token operator">></span><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"&lt;%- url_for('/categories') %>"</span> target<span class="token operator">=</span><span class="token string">"_blank"</span><span class="token operator">></span><span class="token operator">&lt;</span>%- site.categories.length %<span class="token operator">></span><span class="token operator">&lt;</span>/a<span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span>    <span class="token operator">&lt;</span>span class<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span><span class="token operator">&lt;</span>%- __<span class="token punctuation">(</span><span class="token string">'categories'</span><span class="token punctuation">)</span> %<span class="token operator">></span><span class="token operator">&lt;</span>/span<span class="token operator">></span><span class="token operator">&lt;</span>/div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
