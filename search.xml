<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c-primer-plus-2</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<h3 id="说在开头的话"><a href="#说在开头的话" class="headerlink" title="说在开头的话"></a>说在开头的话</h3><p>上一章都是虾扯淡，这一章开始上真格的了，当然我会尽量把生涩难懂的知识讲的简单有趣的</p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>不说别的，这是程序猿的信仰，咱们从它开始</p><pre><code class="bash">$ #include&lt;stdio.h&gt;  int main()  {     printf(&quot;Hello World&quot;);     return 0;  }</code></pre><p>咱们从头开始<br>首先当然是 #includ&lt;stdio.h&gt; 了这个到底是什么意思呢？且听我细细道来：<br>假如你有个哆啦A梦的异次元口袋（想的美），这个口号的尽头是好多仓库A、B、C、D···，假如你这次想用A仓库里的道具，你需要先告诉它呀，你给它说：“嗨宝贝，能把你的异次元通道通往A仓库吗？”口袋很听话把通道通往A。然后你就可以随意从A里挑选好玩的东西了，来吧，给我一个使命必达盒子。。。<br>这个#include叫预处理命令，也就是你的计算机最开始会先处理这条命令，而后面的stdio.h相当于A仓库，而这句话的意思就是，计算机会先开始读这行代码，读完后，它会把已经寄存到内存里的stdio.h（头文件）这里面的东西（函数）都搬来，到时候你需要里面的什么东西（函数）都可以直接调用，然后你下面若是出现c语言的标准函数时（printf、scanf···），这个程序就可以运行了。</p><p>假如若没有这句话，你的异次元口袋搞不懂你想要什么，当然也就无法运行了。</p><p>（在普及一点课外知识，计算机这个学科里有这么一句话：避免重复造轮子。也可以说成：站在巨人的肩膀上。意思就是要善于使用前人以经建立好多，因为它已经经过了时间的考验，和众多前辈的考验，比方说c语言的这些函数，等你学习了指针之后，你也可以随意创造函数，但这些你自己创造的函数是经不过时间的考验的，不一定什么时候就会出现bug，然后你的程序就会崩溃，下一个崩溃的就是你了，在举个🌰吧，Adobe全家桶，假如今年2019年，你会用什么版本的呢？大部分外行人会选择本年头的也就是2019年的，而真正有经验的大虾则是会选择2017甚至2016版本的，因为这些老版本的兼容性好，很少会出现bug问题，而那些新版本的就不行了，你知道最痛苦的是什么吗？大半夜加班做的素材或设计的图案因为兼容性问题奔溃了。。。什么？你问为啥不说2020版的？2020版的ps搭载了机械学习，什么真一件抠图什么，嗯。。真香，妈妈再也不用担心我的学习了）</p><p>扯了半天别的，我们现在来说说int main（）这是什么吧<br>这个在书中给了一个很忽冷的介绍：就目前而言只需记住这是c程序的基本模块。也就是目前的话，你要写一个c的程序就要先写这个。当然我怎么可以告诉你个这个就结束了呢。我从网上找到了个比较不错的解释：“在C语言当中，一个程序，无论复杂或简单，总体上都是一个“函数”；这个函数就称为“main() 函数”，也就是“主函数”。比如有个“做菜”程序，那么“做菜”这个过程就是“主函数”。在主函数中，根据情况，你可能还需要调用“买菜，切菜，炒菜”等子函数。”<br>那么你会问int 是干嘛的呢？我这里先告诉你这是一个定义整形变量的数据类型，也许你有些懵了，我在解释一下看到程序后面有个return 0 了吗？这表示最后这个程序最后会以0作为结尾，而0又是一个整数，还记得int是整形变量的数据类型吗？这形成了一个循环。（多哲学呀，缘起即缘终，最开始就已经注定的结尾）<br>包含这个几个部分的才叫一个完整的程序</p><pre><code class="bash">int main(){    return 0;}</code></pre>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c primer plus-1</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-C语言的特点"><a href="#1-C语言的特点" class="headerlink" title="1.C语言的特点"></a>1.C语言的特点</h3><p>a.设计特性（意思是写的程序更容易让人理解😓更可靠）<br>b.高效性（这玩意是真快，仅次于汇编语言，所以c学的好的非神即渣，后台什么的还是要用c写）<br>c.可移植性（简单说不需要任何修改就可以把mac系统的代码搬到win上去（打个比方）这也是c能编写后台的原因）<br>d.强大而灵活（成也指针败也指针，不说了，说多了都是泪呀）<br>e.面向程序猿（给了程序猿极大的权利，达到真正的管理员，而不是像win一样😥）<br>d.缺点（成也指针败也指针）</p><a id="more"></a><h3 id="2-C语言应用范围"><a href="#2-C语言应用范围" class="headerlink" title="2.C语言应用范围"></a>2.C语言应用范围</h3><p>比如嵌入式系统编程吧，c语言的特点就是稳快准，需要这三方面的c语言都能写</p><h3 id="3-C精神"><a href="#3-C精神" class="headerlink" title="3.C精神"></a>3.C精神</h3><p>这几点比较有意思，我也写出来</p><p>信任程序猿<br>不要妨碍程序猿需要做的事<br>保持语言的精炼和简单<br>只提供一种方法执行一项操作<br>让程序运行更快，即使不能保证其可移植性<br>（🐶我翻译一下，大概就是说，你不懂的话很容易把自己玩脱，但c语言不提醒你，只是静静的看着你个了色在那里排bug）</p><h3 id="4-使用C语言的7个步骤（冥冥中自有七意）"><a href="#4-使用C语言的7个步骤（冥冥中自有七意）" class="headerlink" title="4.使用C语言的7个步骤（冥冥中自有七意）"></a>4.使用C语言的7个步骤（冥冥中自有七意）</h3><p>1.定义程序的目标（也就是你编这个程序想要干什么，一般都是做题，因为你要知道写程序和真正的用c写项目还差的很远也就一九开吧，本人渣渣，大佬轻喷。。。手动滑稽）<br>2.设计程序（假如每写一个程序你都先画一个逻辑图的话，我相信用不了多久你的编程水平和逻辑水平将有质一般的飞跃，当然。。。就当我没说）<br>3.写代码（用你的电脑去敲，相信我，c语言的水平绝对取决于你的代码数量，而学习c的最好方法就是敲代码）<br>4.编译（交给你的编译器去做吧，简答来说就是把英文翻译成中文你才能理解我的意思。。English大佬当我没说）<br>5.运行程序（这一步没什么好说的）<br>6.测试和调试程序（这一步很重要，就是把bug排掉，没有人敢说自己一遍码的代码里没有一个bug，所以养成一套自己的找bug的方法和套路很重要，这也是代码数量决定你c语言水平的原因之一）<br>7.维护和修改（这就涉及到算法将代码简化或者结构的修改了，算法是个好东西，它可以大大简化你的代码量，以后打算单独写一栏算法的）</p><h3 id="5-balabala"><a href="#5-balabala" class="headerlink" title="5.balabala"></a>5.balabala</h3><p>然后感觉就没什么好说的了这差不多就是第一章的内容了，c primer plus是本很nb的书了，我曾看过逼乎大神说大一参加蓝桥杯，刷了两三个月这本书，拿了个a组第一，当然这和我这样的渣渣也没什么关系😂。还有这本书适合有一定c语言基础的人去学习。0基础的请好好去听课或者b站的小甲鱼好吧。当然我写的博客肯定也会有很多错误，我也就是个菜🐔，各路大神如果发现的话，可以联系我改正，咱们共同学习，emm。。大概就是这么多了那么</p><h3 id="本文完"><a href="#本文完" class="headerlink" title="本文完"></a>本文完</h3>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is my very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start-smile-smile-smile-smile"><a href="#Quick-Start-smile-smile-smile-smile" class="headerlink" title="Quick Start :smile: :smile::smile: :smile:"></a>Quick Start :smile: :smile::smile: :smile:</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;&lt;div class=&quot;statis&quot;&gt;    &lt;span class=&quot;count&quot;&gt;&lt;a href=&quot;&lt;%- url_for(&#39;/categories&#39;) %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%- site.categories.length %&gt;&lt;/a&gt;&lt;/span&gt;    &lt;span class=&quot;name&quot;&gt;&lt;%- __(&#39;categories&#39;) %&gt;&lt;/span&gt;&lt;/div&gt;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dmca.gripe:永久托管你的小文件</title>
      <link href="/posts/20976.html"/>
      <url>/posts/20976.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>此篇是我严格意义上的第一篇博文。选择这个主题也是因为在后续优化博客的过程中碰到了相应的问题。故借此机会写下来分享分享。</p><p>因为自己想要在博客中增添音乐和视频板块，在搭建博客的时候参考别人的博客，发现大部分人都是去通过找寻免费的音频网站，获取外链的方式将音乐地址。但这样找寻地址既麻烦，又不能保证音频地址的长期有效性。因为大多数免费音频网站的音乐地址并不是永久固定的，一旦某日链接失效就不能用了。</p><p>我在搭建的时候，为了图方便，把视频和音乐事先下载好放在根目录下，然后将所有音乐和视频的url全部设置成本地地址。但在后期优化的过程中，我发现这样子做虽然确保了链接的永久有效性，但却大大影响了访问速率（一个视频的大小就相当于我其他文件的总和了）。因此，我想找一个既简单免费（毕竟为了这个需求去阿里云买空间实在不值得）、又能永久托管储存我的一些小文件的工具。而 dmca.gripe 完美符合我的需求。</p><p>dmca.gripe下，每个文件的最大上传大小是 5120MB，有账户机制，创建一个账户后便有一个属于你自己的云空间。经测试，上传下载速度都不成问题。任何文件都可以上传。因为博客中的图片，音乐，视频都需要外链，所以我以以上三种文件类型进行测试。</p><p><a href="https://dmca.gripe/" target="_blank" rel="noopener">点击进入dema.gripe</a></p><a id="more"></a><hr><h3 id="图片外链测试"><a href="#图片外链测试" class="headerlink" title="图片外链测试"></a>图片外链测试</h3><p><img src="https://share.dmca.gripe/yz94A9s1yL956wBr.jpg" alt="img"></p><pre><code>https://share.dmca.gripe/yz94A9s1yL956wBr.jpg</code></pre><h3 id="视频外链测试"><a href="#视频外链测试" class="headerlink" title="视频外链测试"></a>视频外链测试</h3><p><video playsinline="" webkit-playsinline="" preload="auto" controls="" src="https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4" width="100%">视频由ray分享，如果您看到这段话说明视频已经失效.</video></p><pre><code>https://share.dmca.gripe/o0svzfA3yJtXnrMI.mp4</code></pre><h3 id="音乐外链测试"><a href="#音乐外链测试" class="headerlink" title="音乐外链测试"></a>音乐外链测试</h3><audio controls="controls">  <source src="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" type="audio/ogg"><embed height="100" width="100" src="/i/song.mp3" /></audio><pre><code>https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3</code></pre><h3 id="文件下载测试"><a href="#文件下载测试" class="headerlink" title="文件下载测试"></a>文件下载测试</h3><h5 id="花海-mp3"><a href="#花海-mp3" class="headerlink" title="花海.mp3"></a><a href="https://share.dmca.gripe/pGyp6q8ii3EDZ4ZI.mp3" target="_blank" rel="noopener">花海.mp3</a></h5><h5 id=""><a href="#" class="headerlink" title=""></a></h5><hr><h5 id="2月22日更新："><a href="#2月22日更新：" class="headerlink" title="2月22日更新："></a>2月22日更新：</h5><h6 id="由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn-smile-）"><a href="#由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn-smile-）" class="headerlink" title="由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn:smile:）"></a>由于该网站的服务器架设在国外，所以没有挂vpn的话速度会有点慢。（之前测试一直是挂着vpn:smile:）</h6>]]></content>
      
      
      <categories>
          
          <category> 发现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gripe </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ucloud----对象存储的最终选择</title>
      <link href="/posts/64617.html"/>
      <url>/posts/64617.html</url>
      
        <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>域名申请之后的第三个星期，阿里云终于通过了我的域名审核。鉴于此前dmca服务器架设在国外，本地阅览我博客里面的音乐视频效果都不是太好。加上picgo图床存放下的图片集杂乱无章，不好整理归档。因此我想寻找一个真正能够存放托管我博客大小文件的空间。此篇记录了我解决此问题的简要经历。</p><a id="more"></a><h3 id="picgo"><a href="#picgo" class="headerlink" title="picgo"></a>picgo</h3><p>博客中的文件，其实就是以图片视频音频这三类为主。在最开始的时候，为了简化操作，我将所有的文件都放在了项目根目录下，简单快捷，但对于网站的访问速度来说却是一大灾难。因此在后期优化的过程中，我开始寻找能够生成外链的公共空间。picgo+github存储是网上比较潮流的生成图片外链的方法。的确，在github平台的托管下，你可以在保证不掏腰包的状态下还能拥有无限的下载流量和无限的存储空间。而且上传下载速度也不用担心，因为在手动融合jsdelivr技术于此图床之后，就等同于拥有一个免费的cdn给你的博客加速，简直不能再好了。</p><blockquote><p>picgo样例：<a href="https://cdn.jsdelivr.net/gh/trayfour34/blog-photo-space/Blog_IMG/20200206020357.png" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/trayfour34/blog-photo-space/Blog_IMG/20200206020357.png</a></p></blockquote><h3 id="dmca"><a href="#dmca" class="headerlink" title="dmca"></a>dmca</h3><p>事实上，上面这个方法确实十分完美的解决了我80%的问题。可是picgo图床终归只是图床，github上也只能存放着我类似于png、bmp、jpg等图片类型，音乐和视频这些比较大的文件却无法存放于此。因此我想，只要再找个空间能够存放音频也就解决了。一顿知乎之后，发现dmca.gripe免费又简单，测试中流量速度也不慢。行，就它了！</p><p>理论上这个问题到此为止就算完美解决了。但后来同学测试完反映情况后我才知道，原来关了vpn之后加载速度堪忧，进度条半天才向前滑一点点。因此我只能另寻出路。</p><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><p>之前，无论是图床还是音频空间，我主要是寻求一些比较次的免费产品，能省即省嘛:sweat_smile:在dmca之后，我也尝试了<a href="https://coka.la/" target="_blank" rel="noopener">Coka.la</a>、<a href="https://streamable.com/" target="_blank" rel="noopener">Streamable</a>等，效果都不是太好。所以我转向寻求大产，寄希望于能碰上某个大产推出免费产品活动的契机（可惜没有）。腾讯云两年前还是可以白嫖的，现在似乎都没了，只推出免费六个月活动。阿里云和华为云需要长期收费。正当山重水复的时候，七牛云映入眼前，一个域名可享每日10G流量+10G存储空间+cdn加速，关键是免费啊。于是把东西都搬了过去，最后测试速度也没问题。大功告成！</p><blockquote><p>七牛云样例：<a href="http://q5okos5qx.bkt.clouddn.com/%E6%B8%A9%E6%9F%94.mp3" target="_blank" rel="noopener">温柔.mp3</a></p></blockquote><h3 id="备案风波"><a href="#备案风波" class="headerlink" title="备案风波"></a>备案风波</h3><p>但是几天之后我才发现，我忽略了一行小小的tip，如下</p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F1.png" alt="tip" style="zoom: 67%;" /><p>也就是说，它给我的是一个测试域名，测试域名要回收，需要创建自定义域名才能永久使用。然而创建自定义域名要将域名备案……</p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F2.png" alt="备案域名才能使用" style="zoom: 67%;" /><p>行，备案就备案吧，再等个几天也不是什么事儿。</p><p>然而，当我把填写备案信息的时候我才发现，原来备案要买备案商的服务器或者虚拟主机，阿里云最便宜的也要一百多块一年….额溜了溜了。</p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F3.png" alt="备案" style="zoom: 50%;" /><p>那个时候还想看看能不能白嫖到一台云主机来备案，所以从阿里云的<strong>万网虚机试用</strong>服务和aws的一年免费主机，但都显示只有转正了才能备案。这条路也断了…</p><h3 id="Ucloud"><a href="#Ucloud" class="headerlink" title="Ucloud"></a>Ucloud</h3><p>最后在漫无目的的搜寻之中，我发现了青云和Ucloud两个不太出名的云服务商。Ucloud推出每个月20G的流量+20G的存储空间，完全适用于小博客的运维。而且Ucloud的客服真的是圈粉了，提交的工单总是能在很短的时间内就予以回复。在开通之前还给我通了个电话，确认我开通对象存储的要求，并嘱咐我注意流量的使用，因为流量超出是没有短信提醒的。（亲身经历，不是打广告:smile:）</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F4.png" alt="(工单)"></p><blockquote><p>Ucloud样例：<a href="http://ray34.cn-sh2.ufileos.com/home%2F%E6%B8%A9%E6%9F%94.png" target="_blank" rel="noopener">http://ray34.cn-sh2.ufileos.com/home%2F%E6%B8%A9%E6%9F%94.png</a></p></blockquote><p>而且它提供一个域名多个地区服务，每个地区20G流量+20G空间。结算下来一百多G，已经是很大很大了。如果能自己实现负载均衡的话，后台就可以自己判断哪个地区的空间多，然后自动把文件放在哪里。具体的实现可以看看这篇文章   <a href="https://www.xiebruce.top/644.html" target="_blank" rel="noopener">使用nginx负载均衡+多个云的免费额度打造免费markdown图床</a>    </p><p>另外，相比之下Ucloud还有一点做的很好，就是文件归档。对比七牛或者阿里云亦或是picgo图床，Ucloud可以像在本地新建文件夹命名文件夹一样，把图片视频以文件夹的形式分好。对比如下：</p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F5.png" alt="(七牛云)"></p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F6.png" alt="(picgo)"></p><p><img src="http://ray34.cn-sh2.ufileos.com/%E5%8D%9A%E6%96%87%2FUcloud----%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E7%9A%84%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%2F7.png" alt="(Ucloud)"></p><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><p>至此，这个问题终究告一段落，不会再有反转了哈哈。在这个过程中我也懂了不少东西，也并非完全浪费时间:smirk:其中还发现了阿里云的虚机试用，后续可以借此机会好好看看。</p>]]></content>
      
      
      <categories>
          
          <category> 发现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ucloud </tag>
            
            <tag> picgo </tag>
            
            <tag> 七牛 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
